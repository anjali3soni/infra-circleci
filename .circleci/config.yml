# version: 2.1

# orbs:
#   terraform: circleci/terraform@3.1 
#   aws-cli: circleci/aws-cli@4.1.3

# executors:
#   terraform-executor:
#     machine:
#       image: ubuntu-2204:current
#       resource_class: medium  

# parameters:
#   env:
#     type: string
#     default: "dev"

# jobs:
#   validate-terraform-install:
#     executor: terraform-executor 
#     parameters:
#       env:  # Declare the parameter for the job
#         type: string
#         default: "<< pipeline.parameters.env >>"
#     steps:
#       - checkout
#       - terraform/install:
#           arch: amd64 
#           os: linux 
#           terraform_version: '1.9.7'
#       - run:
#           command: ls -lah         #for testing
#       - run:
#           name: checking dependencies
#           command: |
#             node -v                #for testing
#             docker -v              #for testing
#             terraform -v
#       - aws-cli/install
#       - aws-cli/setup
#           # access-key-id: $AWS_ACCESS_KEY_ID
#           # region: us-east-1 
#           # profile_name: default
#           # secret-access-key: $AWS_SECRET_ACCESS_KEY
#       - terraform/init
#       - run:
#           name: Set environment Variable
#           command: |
#             if [[ "<< pipeline.parameters.env >>" != "dev" && 
#                   "<< pipeline.parameters.env >>" != "prod" && 
#                   "<< pipeline.parameters.env >>" != "pre-prod" && 
#                   "<< pipeline.parameters.env >>" != "stage" ]]; then
#               export env="dev"
#             else
#               export env="<< pipeline.parameters.env >>"
#             fi
#       - run:
#           name: Select Workspace
#           command: |
#             terraform workspace select << pipeline.parameters.env >>
#       - terraform/plan
#       - terraform/apply
#       # - terraform/init
#       # - terraform/destroy

# workflows:
#   deploy:
#     jobs:
#       - validate-terraform-install:
#             env: << pipeline.parameters.env >>


version: 2.1

orbs:
  terraform: circleci/terraform@3.1 
  aws-cli: circleci/aws-cli@4.1.3

executors:
  terraform-executor:
    machine:
      image: ubuntu-2204:current
      resource_class: medium  

parameters:
  env:
    type: string
    default: "dev"  # Default environment to use if not specified

jobs:
  validate-terraform-install:
    executor: terraform-executor 
    parameters:
      env:  # Declare the parameter for the job
        type: string
        default: "<< pipeline.parameters.env >>"

    steps:
      - checkout
      - terraform/install:
          arch: amd64 
          os: linux 
          terraform_version: '1.9.7'
      - run:
          command: ls -lah         # for testing
      - run:
          name: checking dependencies
          command: |
            node -v                # for testing
            docker -v              # for testing
            terraform -v
      - aws-cli/install
      - aws-cli/setup

      - terraform/init

      - run:
          name: Set environment Variable
          command: |
            if [[ "<< parameters.env >>" != "dev" && 
                  "<< parameters.env >>" != "prod" && 
                  "<< parameters.env >>" != "pre-prod" && 
                  "<< parameters.env >>" != "stage" ]]; then
              export env="dev"
              echo "Invalid environment, defaulting to 'dev'"
            else
              export env="<< parameters.env >>"
              echo "Setting environment to: << parameters.env >>"
            fi

      - run:
          name: Select Workspace
          command: |
            echo "Switching to workspace: << parameters.env >>"
            terraform workspace select << parameters.env >> || terraform workspace new << parameters.env >>
      - terraform/plan
      - terraform/apply

workflows:
  deploy:
    jobs:
      - validate-terraform-install:
          env: "<< pipeline.parameters.env >>"
